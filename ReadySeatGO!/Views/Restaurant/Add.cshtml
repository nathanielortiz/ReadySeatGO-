@model ReadySeatGO_.Models.RestaurantModel

@{
    ViewBag.Title = "Add";
}

<h2>Restaurant Application</h2>

@using (Html.BeginForm("Add", "Restaurant", FormMethod.Post,
    new { @enctype = "multipart/form-data", @name = "image" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Restaurant Here</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Restaurant, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Restaurant, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Restaurant, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CatID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CatID,
                                                  Model.Categories, "Select one...",
                                                  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CatID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manager, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Branch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image,
                         new
                         {
                             htmlAttributes = new
                             {
                                 @class = "form-control",
                                 @type = "file",
                                 @accept = "images/*",
                                 @name = "image",
                                 @required = "true"
                             }
                         })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.OperatingHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OperatingHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperatingHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalSeats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalSeats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalSeats, "", new { @class = "text-danger" })
            </div>
        </div>







        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="myFunction()" />
            </div>
        </div>
    </div>
}
<a class="btn btn-default" href="~/Home/OwnerHome">Go Back &raquo;</a>
<script>
    function myFunction() {
        var txt = window.confirm("You have added a new restaurant thank you owner!");
        if (txt) {
            window.location.href = "~/Home/HomePageOwner";
        }
}
</script>

